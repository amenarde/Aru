<!DOCTYPE html>
<html>
<head>
  <title>Chat</title>
  <script src="js/jquery-3.3.1.min.js"></script>
  <script src="/socket.io/socket.io.js"></script>
  <link rel="apple-touch-icon" sizes="180x180" href="images/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="images/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="images/favicon-16x16.png">
  <link rel="manifest" href="images/site.webmanifest">
  <link rel="mask-icon" href="images/safari-pinned-tab.svg" color="#5bbad5">
  <meta name="msapplication-TileColor" content="#da532c">
  <meta name="theme-color" content="#ffffff">
  <link rel="stylesheet" type="text/css" href="css/chat.css">
</head>

<script type="text/javascript">

    var currentChat = "";
    var myusername = "";
    //var socket = io.connect('http://ec2-34-226-216-39.compute-1.amazonaws.com:8080');
    var socket = io.connect('http://localhost:8080');

    // Find your chats and populate
    window.onload = function () {

        // gets username, only for front end filtering so that user is not shown as available
        socket.emit('who am i', null);

        // presents to friends, removed upon disconnect from socket by navigating away from page
        socket.emit('available to chat', null);

        // Builds currently available chats
        $.post( "/getchats", null, function(results) {
            if(results.error) {
                alert(results.error);
            }
            else{

                if (results.length != 0) {
                    document.getElementById('activeChatList').innerHTML = "";
                }

                results.forEach(function(result) {

                    var users = "";

                    if (result.type === 'dm') {
                        users += "Direct message with ";
                    }
                    else {
                        users += "Groupchat with ";
                    }
                    result.users.forEach(function(user) {
                        users += (user + " /  ");
                    });

                    div = document.createElement('div');
                    $(div).addClass("newchat-cards")
                        .html(users)
                        .appendTo($("#activeChatList")) //main div
                        .click(function (event) {
                            currentChat = event.target.id;
                            socket.emit('join room', currentChat);
                            buildChat();
                        })
                        .attr("id",result.chat);
                });

            }
        });
    }

    // Asks server to start a chat, changes page from discovery mode to chat mode
    var createChat = function() {
	var data = {"username": $('input[name="username"]').val(), }

        $.post( "/createchat", data, function(result) {
            if(result.error) {
                alert(result.error);
            }
            else{
                currentChat = result.chatid;
                socket.emit('join room', currentChat);
                buildChat();
            }
        });

    }

    var buildChat = function() {

        // Switching from chat discovery to chat window
        document.getElementById('activeChatList').style.display = "none";
        document.getElementById('createChat').style.display = "none";
        document.getElementById('backtonewsfeed').style.display = "none";
        document.getElementById('activeUserList').style.display = "none";
        document.getElementById('active-chat-title').style.display = "none";
        document.getElementById('active-user-title').style.display = "none";
        document.getElementById('chatWindow').style.display = "block";
        document.getElementById('chat').style.display = "block";
        document.getElementById('addUser').style.display = "block";
        document.getElementById('backtochats').style.display = "block";

        var chatWindow = document.getElementById('chatWindow');

        var chatTitle = document.getElementById('chatTitle');

        // Get chat data for first time, rest comes from sockets
        $.post( "/fetchchat", {'chatID': currentChat}, function(result) {
            if(result.error) {
                alert(result.error);
            }
            else{

                if (result.type === 'dm') {
                    document.getElementById('leave').style.display = "none";
                }
                else if (result.type === 'group') {
                    document.getElementById('leave').style.display = "block";
                }

                chatTitle.innerHTML = result.chatTitle;

                var chats = result.chats.Items;

                chats.forEach(chat => {
                    div = document.createElement('div');
                    $(div).addClass("newchat-cards")
                        .html("("+chat.username+") "+chat.data)
                        .appendTo($("#chatWindow")) //main div
                });
            }
        });
    }

    var addUser = function() {
        var data = {"username": $('input[name="addusername"]').val(), "chatID": currentChat};

        socket.emit('add user', data);
    }

    var leaveChat = function() {
        var data = {"chatID": currentChat};
        socket.emit('leave', data);
    }

    var chat = function() {
        var data = {"message": $('input[name="message"]').val(),
                    "chatID": currentChat};

        socket.emit('post message', data);
    }

    // For building chat entry
    const addChatMessage = (data) => {
        div = document.createElement('div');
        $(div).addClass("newchat-cards")
            .html("("+data.username+") "+data.message)
            .appendTo($("#chatWindow")) //main div
    }

    socket.on('username', (data) => {
        myusername = data.username;
    });

    // Build list of available users
    socket.on('available', (data) => {

        document.getElementById('activeUserList').innerHTML = "";

        if (data.users.length == 1) {
            document.getElementById('activeUserList').innerHTML = "It appears that there are no users online.";
        }

        data.users.forEach(function(username) {

            if (username != myusername) {
                div = document.createElement('div');
            $(div).addClass("newchat-cards")
            .html(username)
            .appendTo($("#activeUserList")) //main div
            .click(function (event) {
                $.post( "/createchat", {username: event.target.id}, function(result) {
                if(result.error) {
                    alert(result.error);
                }
                else{
                    currentChat = result.chatid;
                    socket.emit('join room', currentChat);
                    buildChat();
                }
        });
            })
            .attr("id",username);
            }

        });
    });

    // Upon leaving, current user gets leave socket message, all other people in chat get remove user
    socket.on('remove user', (data) => {
        div = document.createElement('div');
        $(div).addClass("newchat-cards")
            .html(data.leavingUser + " left this chat")
            .appendTo($("#chatWindow")) //main div

        $.post( "/fetchchat", {'chatID': currentChat}, function(result) {
            if(result.error) {
                alert(result.error);
            }
            else{
                chatTitle.innerHTML = result.chatTitle;
            }});
    });

    socket.on('leave', (data) => {
        window.location.href = "/chat";
    });

      // Whenever the server emits 'new message', update the chat body
    socket.on('new message', (data) => {
        addChatMessage(data);
    });

    // Upon adding a user, there are two cases, they are added to the current chat, or adding them turned the chat from
    // a DM to a groupchat: the page checks whether the returned ID is new or not and behaves accordingly
    socket.on('add user', (data) => {
        document.getElementById('leave').style.display = "block";
        if (data.chatID === currentChat) {
                    div = document.createElement('div');
                    $(div).addClass("newchat-cards")
                        .html(data.askingUser+" added " + data.userToAdd + " to this chat")
                        .appendTo($("#chatWindow")) //main div

                    $.post( "/fetchchat", {'chatID': currentChat}, function(result) {
                        if(result.error) {
                            alert(result.error);
                        }
                        else{
                            chatTitle.innerHTML = result.chatTitle;
                        }});
                }
                else {
                    var chatWindow = document.getElementById('chatWindow');
                    chatWindow.innerHTML = '';
                    currentChat = data.chatID;
                    socket.emit('join room', currentChat);
                    buildChat();
                }
    });


</script>

<body>
    <p id="active-chat-title">Active Chats</p>
    <p id="activeChatList">It appears that you have no active chats.<br></p>
    <p id="active-user-title">Active Users</p>
    <p id="activeUserList">It appears that there are no users online.<br></p>

    <p id="chatTitle"></p>
    <p id="chatWindow"></p>

    <form method="post" action="javascript:createChat();" id="createChat">
        Who would you like to chat? <input type="text" name="username" placeholder="username" required="required">
        <input type="submit" value="Create Chat">
    </form>

    <form style="display:none" id="chat" action="javascript:chat();">
            <input type="text" name="message" placeholder="message" required="required">
            <input type="submit" value="Submit">
    </form>

    <form style="display:none" id="addUser" action="javascript:addUser();">
        Who would you like to add to the chat? <input type="text" name="addusername" placeholder="username" required="required">
        <input type="submit" value="Add user">
    </form>

    <form style="display:none" id="leave" action="javascript:leaveChat();">
            <input type="submit" value="Leave Chat">
    </form>

    <form style="display:none" id="leave" action="javascript:leaveChat();">
            <input type="submit" value="Leave Chat">
    </form>
    <a href="/newsfeed" id = "backtonewsfeed">Go to newsfeed</a>
    <a href="/chat" id = "backtochats" style="display:none">Back to chats</a>
</body>
